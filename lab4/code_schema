app/
├── api/                  # файлы, где описаны эндпоинты
│   ├── auth.py           # файл для аутентификации и авторизации
│   ├── corpuses.py       # работа с “корпусами”
│   ├── deps.py           # сборник общих функций-зависимостей
│   └── search.py         # отвечает за обработку запросов, связанных с поиском
├── core/                 # основные настройки проекта и код безопасности
│   ├── config.py         # загружает переменные из .env
│   └── security.py       # хеширует пароли и генерирует токены
├── db/                   # работа с БД
│   ├── base.py           # создаем класс Base, от которого будут унаследованы все модели (User, Corpus и т.д.)
│   ├── database.db       # файл базы данных
│   └── session.py        # подключение к БД
├── models/               # описание таблиц
│   ├── user.py           # пользователи (id, email, hashed_password)
│   └── corpus.py         # корпуса текста (id, title, content)
├── cruds/                # CRUD-функции (Create, Read, Update, Delete)
│   └── user_crud.py      # функции создания и извлечения пользователя по email.
├── schemas/              # Pydantic-схемы, которые описывают как данные выглядят во входных/выходных запросах
│   ├── corpus_schemas.py
│   └── user_schemas.py
├── services/             # логика нечеткого поиска
│   └── fuzzy_search.py   # функции расстояния Левенштейна и Дамерау-Левенштейна
└── main.py               # создаётся объект FastAPI, подключаются все роутеры, запускается сервер

alembic/                  # миграции базы данных
.env                      # файл окружения, где лежат переменные
